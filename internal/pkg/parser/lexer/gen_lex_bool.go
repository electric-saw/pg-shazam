// Code generated by go generate; DO NOT EDIT.

package lexer

import "strings"

//gocyclo:ignore
const (
	keywordFalse = "false"
	keywordTrue  = "true"
)

func lexBool(source string, srcCursor cursor) (*Token, cursor, bool) {
	var cur cursor = srcCursor

	if len(source[cur.pointer:]) >= 4 {
		if strings.EqualFold(source[cur.pointer:cur.pointer+4], "true") {
			cur.pointer += 4
			cur.loc.Col += 4
			return &Token{Kind: KindBool, Value: string(keywordTrue), Loc: srcCursor.loc}, cur, true
		}
	}

	if len(source[cur.pointer:]) >= 5 {
		if strings.EqualFold(source[cur.pointer:cur.pointer+5], "false") {
			cur.pointer += 5
			cur.loc.Col += 5
			return &Token{Kind: KindBool, Value: string(keywordFalse), Loc: srcCursor.loc}, cur, true
		}
	}

	switch source[cur.pointer] {
	}
	return nil, srcCursor, false
}

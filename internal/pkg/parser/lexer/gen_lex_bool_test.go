// Code generated by go generate; DO NOT EDIT.

package lexer

import (
	"fmt"
	"testing"
)

//gocyclo:ignore
var lexBoolTestData = map[string]string{
	keywordFalse: "false",
	keywordTrue:  "true",
}

func TestLexBool(t *testing.T) {
	for tk, s := range lexBoolTestData {
		token, _, found := lexBool(s, cursor{})
		if !found {
			t.Errorf(fmt.Sprintf("token %s (%s) not found", tk, s))
		} else if token.Kind != KindBool {
			t.Errorf(fmt.Sprintf("token is %d, expected %d", token.Kind, KindBool))
		} else if token.Value != tk {
			t.Errorf(fmt.Sprintf("token value is %s, expected %s", token.Value, tk))
		}
	}
}
